version: "3"

x-rails: &rails-config
  build: .
  volumes:
    - ./:/app
    - api_gem_path:/bundle
  environment:
    - RUBY_YJIT_ENABLE=1
    - BUNDLE_GEMFILE=/app/Gemfile
    - BUNDLE_PATH=/bundle/vendor
    - RAILS_ENV=$RAILS_ENV
    - DB_HOST=$DB_HOST
    - DB_PASSWORD=$DB_PASSWORD
    - HOST_PORT=$HOST_PORT
    - CONTAINER_PORT=$CONTAINER_PORT
    - KAFKA_HOST=$KAFKA_HOST

services:
  db:
    container_name: db
    build:
      context: db
    environment:
      - POSTGRES_PASSWORD=$DB_PASSWORD
    ports:
      - 5433:5432
    volumes:
      - ./db/initdb.d:/docker-entrypoint-initdb.d
      - db_data:/var/lib/postgresql/data

  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=V4VbEgHbHHlHDv1HnGI77Q
    volumes:
      - kafka_data:/bitnami/kafka

  karafka:
    <<: *rails-config
    container_name: karafka
    command: bin/bundle exec karafka server

  api:
    <<: *rails-config
    tty: true
    stdin_open: true
    container_name: api
    ports:
      - $HOST_PORT:$CONTAINER_PORT
    command: |
      sh -c "rm -f /app/tmp/pids/server.pid &&
      bin/rails db:migrate
      bin/rails db:seed
      bin/rails s -b 0.0.0.0 -p $CONTAINER_PORT"
    depends_on:
      - db
      - kafka
      - karafka

volumes:
  db_data:
  kafka_data:
  api_gem_path:
    external: true
